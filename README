# Use this command to install
python setup.py install --user

# Then this to fire of nodemon if developing:
npm run test (my custom built test module, you can pass a controller/method to call it when building the api)
npm run api (the api server for the rest interface)

# To run the test file
python test.py 
# - or - 
npm run test # or wintest for windows

# try this for testing:
npm run wintest ns_cluster nodetool_status




# optional requirement builder if you want to use requirements instead of setup
# If you have installed many dependencies in your system and you need requirements.txt for a specific project, you # can install first pipreqs:
 
$ pip install pipreqs
 
# and execute the below command under the project folder.
 
$ pipreqs
 
# This command will generate requirements.txt file for the particular project.
# This helps you to set up your development environment.
# Run like so
$ pip install -r requirements.txt

# SSL keys
# figuring out how to use keys. If we've gotten a private key creted already from ssh-keygen, it'll be
# in a folder called module/connection/keys, we need to copy the public key on our linux hosts

mkdir -p ~/.ssh && echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCy4q9+N+VokUte2KdHBElErKbGY+NCKAsPAu2zT2pTIPtNTuEqsPNIfshvZgIKAFMiLkP7cG01on3XXYwNAn4V0qNF9SCVDUeJvqdmeFjBV9L5V+UZFqZ0V4LybMvb49JC/uwokDEcvLxhBiEy6CuR0qPTNntJiZdq20rayGd8HaBiaPnXjxzpIjwiPzpTyZRsnH2P4aPJv3qheh8Pa6Z7/+yWBi8dqXouT3gOgUiw6DDh8v5EjZRZ1mrRPTg2LvzK7uMRmEL+KStQ5MyEhpRePo8osoo32v4xMq6ek/dmeWxZUWCsiP4H8Kgg9Cp0eWFBVJRBTX4MczTCct24AXFR james@DESKTOP-AT47MNM >> ~/.ssh/authorized_keys && chmod -R go= ~/.ssh


